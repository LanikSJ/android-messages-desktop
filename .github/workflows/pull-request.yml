# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: pull request

permissions:
  contents: read
  packages: write

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]
    paths:
      - .github/workflows/pull-request.yml
      - src/**
      - electron-builder.js
      - package.json
      - tsconfig.json
      - webpack.config.ts
      - yarn.lock

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
          - windows-latest
          - ubuntu-latest
        node-version:
          - 22

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node_modules
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: ./node_modules
          key: ${{ matrix.os }}-${{ matrix.node-version }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
        env:
          cache-name: node-modules

      - run: sudo apt-get update -y && sudo apt-get install --no-install-recommends -y libopenjp2-tools rpm libarchive-tools
        name: Install Linux Dependencies
        if: (startsWith(matrix.os, 'ubuntu'))

      - run: yarn install --frozen-lockfile

      - run: yarn dist --publish never

      - name: Upload Build
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: ${{ matrix.os }}-${{ matrix.node-version }}
          path: ./dist
